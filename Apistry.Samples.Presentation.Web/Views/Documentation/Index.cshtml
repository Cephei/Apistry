@using Newtonsoft.Json.Linq
@model IEnumerable<Apistry.ApiActionDescription>

@{
    ViewBag.Title = "Documentation";
    var _JsonSerializer =
        Newtonsoft.Json.JsonSerializer.Create(
            new Newtonsoft.Json.JsonSerializerSettings
            {
                Formatting = Newtonsoft.Json.Formatting.Indented
            });
}

<!DOCTYPE html>
<html>
<head>
    <title>Documentation</title>

    <link rel="stylesheet" href="@Url.Content("~/Content/css/style.css")" type="text/css" media="screen" />
</head>
<!--[if lt IE 7]> <body class="ie ie6 lte_ie9 lte_ie8 lte_ie7"> <![endif]-->
<!--[if IE 7]> <body class="ie ie7 lte_ie9 lte_ie8 lte_ie7"> <![endif]-->
<!--[if IE 8]> <body class="ie ie8 lte_ie9 lte_ie8"> <![endif]-->
<!--[if IE 9]> <body class="ie ie9 lte_ie9"> <![endif]-->
<!--[if gt IE 9]> <body> <![endif]-->
<!--[if !IE]><!-->
<body>
    <!--<![endif]-->
    <div class="container">

            <div class="sidebar sidebar_popout">
                <div id="sidebar_button" class="sidebar_button"></div>

                <div tabindex="5000" style="overflow-y: hidden; height: 319px;" id="sidebar_docs" class="menu-container clipped">
                    <ul id="menu-documentation" class="menu">

                        <li id="menu-item-32" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-32">
                            <a>Resources</a>
                            <ul class="sub-menu">
                                @{
                                    var resources = from resource in Model
                                                    group resource by resource.Documentation.Controller.ResourceName
                                                        into apiActionDescriptions
                                                        select new
                                                            {
                                                                ResourceName = apiActionDescriptions.Key,
                                                                ApiActionDescription = apiActionDescriptions
                                                            };
                                }

                                @foreach (var resource in resources)
                                {
                                    <li id="menu-item-19542" class="menu-item-19542 has_sub_menu sub_menu_active">
                                        <span class="sub_menu_arrow"></span>
                                        <a href="#@resource.ResourceName">@resource.ResourceName</a>
                                        <ul style="display: block;" class="sub-menu">
                                            @foreach (var action in resource.ApiActionDescription)
                                            {
                                                <li id="menu-item-@action.ID" class="menu-item-@action.ID">
                                                    <a href="#@action.ID">@action.Documentation.Name</a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
            <div id="content" class="content content_sidebar content_sidebar_popout">
                
                @foreach (var resource in resources)
                {
                    foreach (var action in resource.ApiActionDescription)
                    {
                    <div class="section">
                        <a id="@action.ID" name="@action.ID" class="section_anchor"></a>
                        <div class="text">
                            <h3>@action.Documentation.Name</h3>

                            <p>
                                @Html.Raw(action.Documentation.Summary)
                            </p>

                            <h4>Request</h4>
                            
                            @if (!String.IsNullOrWhiteSpace(action.Documentation.Alert))
                            {
                                <div class="cntr cntr_orange media">
                                    @Html.Raw(action.Documentation.Alert)
                                </div>
                            }
                            
                            @if (!String.IsNullOrWhiteSpace(action.Documentation.Information))
                            {
                                <div class="cntr cntr_blue media">
                                    @Html.Raw(action.Documentation.Information)
                                </div>
                            }

                            @{
                                var uriParameters = from parameter in action.Documentation.Request.Parameters
                                                    group parameter by parameter.IsRequired
                                                    into requestParameters
                                                    select new
                                                        {
                                                            IsRequired = requestParameters.Key,
                                                            Parameters = requestParameters
                                                        };
                            }

                            @if (uriParameters.Any())
                            {
                                <h5>Parameters</h5>
                                <table class="parameters">

                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Type</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var parameterGroup in uriParameters)
                                        {
                                            <tr>
                                                <td colspan="3">@{ WriteLiteral(parameterGroup.IsRequired ? "Required" : "Optional");} Parameters</td>
                                            </tr>
                                            foreach (var parameter in parameterGroup.Parameters)
                                            {
                                                <tr>
                                                    <td>@parameter.Name</td>
                                                    <td>@parameter.Type</td>
                                                    <td>@Html.Raw(parameter.Description)</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            }
                            
                            <h4>Response</h4>
                            <p>
                                @action.Documentation.Response.Summary
                            </p>

                            @if (action.Documentation.Response.Properties.Any())
                            {
                                <h5>Properties</h5>
                                <table>
                                    <thead>
                                        <tr>
                                            <td>Name</td>
                                            <td>Type</td>
                                            <td>Description</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var responseProperty in action.Documentation.Response.Properties)
                                        {
                                            <tr>
                                                <td>@responseProperty.Name</td>
                                                <td>@responseProperty.Type</td>
                                                <td>@Html.Raw(responseProperty.Description)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }


                        </div>

                        <div class="code">
                            <h2>Method</h2>
                            <p>
                                @action.HttpMethod @action.RelativePath
                            </p>
                            
                            <h2>Example Request</h2>
                            @if (action.Documentation.Request.Content != null)
                            {
                                <pre>
                                    <code class="json">
                                        @{
                                            using (var stringWriter = new StringWriter())
                                            {
                                                using (var jsonTextWriter = new Newtonsoft.Json.JsonTextWriter(stringWriter))
                                                {
                                                    _JsonSerializer.Serialize(jsonTextWriter, action.Documentation.Request.Content);

                                                    WriteLiteral(stringWriter.GetStringBuilder().ToString());
                                                }
                                            }
                                        }
                                    </code>
                                </pre>
                            }

                            
                            <h2>Example Response</h2>
                            <h6>Status Code: @((int)action.Documentation.Response.StatusCode) @action.Documentation.Response.StatusCode</h6>
                            @if (action.Documentation.Response.Content != null)
                            {
                                <pre>
                                    <code class="json">
                                        @using (var stringWriter = new StringWriter())
                                        {
                                            using (var jsonTextWriter = new Newtonsoft.Json.JsonTextWriter(stringWriter))
                                            {
                                                _JsonSerializer.Serialize(jsonTextWriter, action.Documentation.Response.Content);

                                                WriteLiteral(stringWriter.GetStringBuilder().ToString());
                                            }
                                        }
                                    </code>
                                </pre>
                            }
                        </div>
                    </div>
                    }
                }

            </div>

        
    </div>

    <script type="text/javascript" src="@Url.Content("~/Content/js/global.js")"></script>

    <script type="text/javascript" src="@Url.Content("~/Content/js/docs.js")"></script>

</body>
</html>